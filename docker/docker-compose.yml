version: '2.7'

x-app-service-template: &app
  image: app:1.0.0
  tmpfs:
    - /tmp
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  build:
    context: .dockerdev/
    dockerfile: Dockerfile
    args:
      RUBY_VERSION: '2.7.2'
      NODE_MAJOR: '12'
      BUNDLER_VERSION: '1.7.3'
      YARN_VERSION: '1.21.1'

# Railsコンテナ定義
x-backend: &backend
  <<: *app
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
  tmpfs:
    - /app/tmp/pids
  environment: &backend-env
    <<: *env
    REDIS_URL: redis://redis:6379/
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    WEB_CONCURRENCY: 1
    HISTFILE: /app/log/.bash_history
    EDITOR: vi
    CHROME_URL: http://chrome:3333
  stdin_open: true
  tty: true
  depends_on: &backend_depends_on
    db:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      <<: *env
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

  db:
    image: mysql:5.7
    ports:
      - '3316:3306'
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
    environment:
      MYSQL_ROOT_PASSWORD: "1234567890"
      MYSQL_DATABASE: development
      MYSQL_USER: dev
      MYSQL_PASSWORD: "1234567890"
    volumes:
      - mysql:/var/lib/mysql
      - .dockerdev/mysql-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 5s
    ports:
      - 3316:3306

  redis:
    image: redis
    command: redis-server
    volumes:
      - redis:/var/lib/redis/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  chrome:
    image: browserless/chrome:1.36-chrome-stable
    ports:
      - "3333:3333"
    environment:
      PORT: 3333
      # Set connection timeout to avoid timeout exception during debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 600000
      # To fix timezone detection from js
      TZ: Asia/Tokyo

  rspec_system:
    <<: *backend
    environment:
      <<: *backend-env
      WEBPACKER_DEV_SERVER_HOST: webpacker_test
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs-test:/app/public/packs-test
    depends_on:
      <<: *backend_depends_on
      webpacker_test:
        condition: service_started
      chrome:
        condition: service_started

  webpacker_test:
    <<: *app
    command: ./bin/webpack-dev-server
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs-test:/app/public/packs-test
    environment:
      <<: *env
      RAILS_ENV: test
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

volumes:
  mysql:
  redis:
  bundle:
  node_modules:
  rails_cache:
  packs:
  packs-test:
